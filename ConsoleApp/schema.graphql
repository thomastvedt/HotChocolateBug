schema {
  query: Query
  mutation: Mutation
}

type Query {
  ping(message: String!): String!
  user(userId: String!): User!
}

type Mutation {
  saveUserEmail(userId: String! email: String!): User!
}

type User {
  id: String!
  name: String!
  age: Int!
  email: String!
}

type AuthorizeDirective {
  policy: String
  roles: [String!]
  apply: ApplyPolicy!
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
}